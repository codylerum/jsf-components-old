<?xml version="1.0" encoding="UTF-8"?>
<cdk:root xmlns="http://jboss.org/schema/richfaces/cdk/xhtml-el" xmlns:cdk="http://jboss.org/schema/richfaces/cdk/core" xmlns:c="http://jboss.org/schema/richfaces/cdk/jstl/core" xmlns:cc="http://jboss.org/schema/richfaces/cdk/jsf/composite"
	xmlns:javaee="http://java.sun.com/xml/ns/javaee">

	<cc:interface>
		<cdk:class>com.outjected.jsf.renderkit.DecorateInputRenderer</cdk:class>
		<cdk:superclass>com.outjected.jsf.renderkit.DecorateInputRendererBase</cdk:superclass>
		<cdk:renderer-type>com.outjected.jsf.decorateInput</cdk:renderer-type>
		<cdk:renders-children>true</cdk:renders-children>
	</cc:interface>

	<cc:implementation>

		<cdk:object type="com.outjected.jsf.component.AbstractDecorateInput" name="decorateInput" value="#{getDecorateInput(component)}" />
		<cdk:object type="javax.faces.component.UIComponent" name="valueComponent" value="#{getValueComponent(facesContext,component,decorateInput)}" />
		<cdk:object type="javax.faces.component.UIMessages" name="messages" value="#{getMessages(decorateInput)}" />
		<cdk:call expression="messages.setFor(valueComponent.getId())" />
		
	<div cdk:passThroughWithExclusions="id,class" id="#{clientId}" class="form-group #{component.attributes['styleClass']}#{hasErrors(facesContext,valueComponent) ? ' has-error' : null}">
		<c:if test="#{not empty component.attributes['help']}">	
			<label class="control-label popover-source #{component.attributes['labelClass']}" for="#{valueComponent.getClientId(facesContext)}" title="#{decorateInput.label}" data-container="#{component.attributes['helpContainer']}" data-content="#{component.attributes['help']}" data-title="#{not empty component.attributes['helpTitle'] ? component.attributes['helpTitle'] : component.attributes['label']}" data-placement="#{component.attributes['helpPlacement']}" data-trigger="#{component.attributes['helpTrigger']}" data-delay="#{component.attributes['helpDelay']}" data-html="#{component.attributes['helpHtml']}">
				<span>
					#{decorateInput.label}
					<c:if test="#{isRequired(valueComponent)}">
						<span class="required">*</span>
					</c:if>
				</span>				
			</label>
		</c:if>
		<c:if test="#{empty component.attributes['help']}">
			<label class="control-label #{component.attributes['labelClass']}" for="#{valueComponent.getClientId(facesContext)}" title="#{decorateInput.label}">
				<span>
					#{decorateInput.label}
					<c:if test="#{isRequired(valueComponent)}">
						<span class="required">*</span>
					</c:if>
				</span>				
			</label>
		</c:if>
		<div class="#{component.attributes['valueClass']}">
			<cdk:call expression="encodeValue(facesContext,component)" />
			<c:if test="#{decorateInput.isRenderMessages()}">
				<span class="help-block">
					<cdk:call expression="messages.encodeAll(facesContext)" />
				</span>
			</c:if>
		</div>
	</div>		
	</cc:implementation>
</cdk:root>